{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_FURNITURE, FETCH_FURNITURE_SUCCESS, FETCH_FURNITURE_FAILURE, FETCH_ALL_FURNITURE_SUCCESS, CREATE_FURNITURE_SUCCESS, UPDATE_FURNITURE_SUCCESS, DELETE_FURNITURE_SUCCESS } from '../../actionTypes';\nimport hostServerJSON from \"../hostServer.json\";\nconst hostServer = hostServerJSON.path;\nexport const fetchFurniture = (page = 1, limit = 10) => async dispatch => {\n  dispatch({\n    type: FETCH_FURNITURE\n  });\n  try {\n    const response = await axios.get(`${hostServer}furnitureModel/?page=${page}&limit=${limit}`);\n    dispatch({\n      type: FETCH_FURNITURE_SUCCESS,\n      payload: {\n        ...response.data,\n        currentPage: page,\n        limit\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_FURNITURE_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const fetchAllFurnitureModels = () => async dispatch => {\n  dispatch({\n    type: FETCH_FURNITURE\n  });\n  try {\n    const response = await axios.get(`${hostServer}furnitureModel/withoutPag`);\n    dispatch({\n      type: FETCH_ALL_FURNITURE_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_FURNITURE_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const createFurnitureModel = furnitureModelData => async dispatch => {\n  try {\n    dispatch({\n      type: FETCH_FURNITURE\n    });\n    const response = await axios.post(`${hostServer}furnitureModel/`, furnitureModelData);\n    if (!response.data) {\n      throw new Error('Ошибка при создании мебели: Сервер вернул пустой ответ.');\n    }\n    if (response.status >= 400) {\n      const errorMessage = response.data.message || \"Ошибка при создании мебели\";\n      throw new Error(errorMessage);\n    }\n    dispatch({\n      type: CREATE_FURNITURE_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    var _error$response, _error$response$data;\n    const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Ошибка при создании мебели';\n    dispatch({\n      type: FETCH_FURNITURE_FAILURE,\n      payload: errorMessage\n    });\n    console.error('Ошибка при создании модели мебели:', error);\n  }\n};\nexport const updateFurniture = (furnitureId, updatedFurnitureData) => async dispatch => {\n  dispatch({\n    type: FETCH_FURNITURE\n  });\n  try {\n    const response = await axios.put(`${hostServer}furnitureModel/${furnitureId}`, updatedFurnitureData);\n    dispatch({\n      type: UPDATE_FURNITURE_SUCCESS,\n      payload: response.data\n    });\n    return Promise.resolve();\n  } catch (error) {\n    let errorMessage = 'Ошибка при обновлении мебели';\n    if (error.response) {\n      if (error.response.data && error.response.data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.response.status === 404) {\n        errorMessage = 'Мебель не найдена';\n      } else {\n        errorMessage = `Ошибка сервера (${error.response.status})`;\n      }\n    } else if (error.request) {\n      errorMessage = 'Запрос не был отправлен';\n    } else {\n      errorMessage = error.message;\n    }\n    dispatch({\n      type: FETCH_FURNITURE_FAILURE,\n      payload: errorMessage\n    });\n    return Promise.reject({\n      message: errorMessage\n    });\n  }\n};\nexport const deleteFurniture = furniture_id => async dispatch => {\n  try {\n    dispatch({\n      type: FETCH_FURNITURE\n    });\n    const response = await axios.delete(`${hostServer}furnitureModel/${furniture_id}`);\n    if (response.status === 200) {\n      dispatch({\n        type: DELETE_FURNITURE_SUCCESS,\n        payload: furniture_id\n      });\n    } else {\n      throw new Error(response.data.message || 'Ошибка при удалении мебели');\n    }\n  } catch (error) {\n    dispatch({\n      type: FETCH_FURNITURE_FAILURE,\n      payload: error.message\n    });\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axios","FETCH_FURNITURE","FETCH_FURNITURE_SUCCESS","FETCH_FURNITURE_FAILURE","FETCH_ALL_FURNITURE_SUCCESS","CREATE_FURNITURE_SUCCESS","UPDATE_FURNITURE_SUCCESS","DELETE_FURNITURE_SUCCESS","hostServerJSON","hostServer","path","fetchFurniture","page","limit","dispatch","type","response","get","payload","data","currentPage","error","message","fetchAllFurnitureModels","createFurnitureModel","furnitureModelData","post","Error","status","errorMessage","_error$response","_error$response$data","console","updateFurniture","furnitureId","updatedFurnitureData","put","Promise","resolve","request","reject","deleteFurniture","furniture_id","delete","log"],"sources":["D:/University/React/LAB_7/client/src/actions/FurnitureModel/furnitureModelActions.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n  FETCH_FURNITURE,\r\n  FETCH_FURNITURE_SUCCESS,\r\n  FETCH_FURNITURE_FAILURE,\r\n  FETCH_ALL_FURNITURE_SUCCESS,\r\n  CREATE_FURNITURE_SUCCESS,\r\n  UPDATE_FURNITURE_SUCCESS,\r\n  DELETE_FURNITURE_SUCCESS\r\n} from '../../actionTypes';\r\nimport hostServerJSON from \"../hostServer.json\";\r\nconst hostServer = hostServerJSON.path;\r\n\r\nexport const fetchFurniture = (page = 1, limit = 10) => async (dispatch) => {\r\n  dispatch({ type: FETCH_FURNITURE });\r\n  try {\r\n    const response = await axios.get(`${hostServer}furnitureModel/?page=${page}&limit=${limit}`);\r\n    dispatch({ type: FETCH_FURNITURE_SUCCESS, payload: { ...response.data, currentPage: page, limit } });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_FURNITURE_FAILURE, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const fetchAllFurnitureModels = () => async (dispatch) => {\r\n  dispatch({ type: FETCH_FURNITURE });\r\n  try {\r\n    const response = await axios.get(`${hostServer}furnitureModel/withoutPag`);\r\n    dispatch({ type: FETCH_ALL_FURNITURE_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_FURNITURE_FAILURE, payload: error.message });\r\n  }\r\n}\r\n\r\nexport const createFurnitureModel = (furnitureModelData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: FETCH_FURNITURE }); \r\n\r\n    const response = await axios.post(`${hostServer}furnitureModel/`, furnitureModelData);\r\n\r\n    if (!response.data) {\r\n      throw new Error('Ошибка при создании мебели: Сервер вернул пустой ответ.');\r\n    }\r\n\r\n    if (response.status >= 400) {\r\n      const errorMessage = response.data.message || \"Ошибка при создании мебели\";\r\n      throw new Error(errorMessage);\r\n    }\r\n\r\n    dispatch({ type: CREATE_FURNITURE_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    const errorMessage = error.response?.data?.message || error.message || 'Ошибка при создании мебели';\r\n    dispatch({ type: FETCH_FURNITURE_FAILURE, payload: errorMessage });\r\n    console.error('Ошибка при создании модели мебели:', error);\r\n  }\r\n};\r\n\r\nexport const updateFurniture = (furnitureId, updatedFurnitureData) => async (dispatch) => {\r\n  dispatch({ type: FETCH_FURNITURE });\r\n\r\n  try {\r\n    const response = await axios.put(`${hostServer}furnitureModel/${furnitureId}`, updatedFurnitureData);\r\n    dispatch({ type: UPDATE_FURNITURE_SUCCESS, payload: response.data });\r\n    return Promise.resolve();\r\n  } catch (error) {\r\n    let errorMessage = 'Ошибка при обновлении мебели';\r\n    if (error.response) {\r\n      if (error.response.data && error.response.data.message) {\r\n        errorMessage = error.response.data.message;\r\n      } else if (error.response.status === 404) {\r\n        errorMessage = 'Мебель не найдена';\r\n      } else {\r\n        errorMessage = `Ошибка сервера (${error.response.status})`;\r\n      }\r\n    }\r\n    else if (error.request) {\r\n      errorMessage = 'Запрос не был отправлен';\r\n    } else {\r\n      errorMessage = error.message;\r\n    }\r\n    dispatch({ type: FETCH_FURNITURE_FAILURE, payload: errorMessage });\r\n    return Promise.reject({ message: errorMessage });\r\n  }\r\n};\r\n\r\nexport const deleteFurniture = (furniture_id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: FETCH_FURNITURE });\r\n\r\n    const response = await axios.delete(`${hostServer}furnitureModel/${furniture_id}`);\r\n\r\n    if (response.status === 200) {\r\n      dispatch({ type: DELETE_FURNITURE_SUCCESS, payload: furniture_id });\r\n    } else {\r\n      throw new Error(response.data.message || 'Ошибка при удалении мебели');\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_FURNITURE_FAILURE, payload: error.message });\r\n    console.log(error);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}