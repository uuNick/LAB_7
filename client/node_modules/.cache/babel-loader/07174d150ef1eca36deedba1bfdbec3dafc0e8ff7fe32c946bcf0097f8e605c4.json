{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_BUYER, FETCH_BUYER_SUCCESS, FETCH_BUYER_FAILURE, FETCH_BUYER_BY_ID_SUCCESS, FETCH_ALL_BUYERS_SUCCESS, CREATE_BUYER_SUCCESS, UPDATE_BUYER_SUCCESS } from '../../actionTypes';\nimport hostServerJSON from \"../hostServer.json\";\nconst hostServer = hostServerJSON.path;\nexport const fetchBuyer = (page = 1, limit = 10) => async dispatch => {\n  dispatch({\n    type: FETCH_BUYER\n  });\n  try {\n    const response = await axios.get(`${hostServer}buyer/?page=${page}&limit=${limit}`);\n    dispatch({\n      type: FETCH_BUYER_SUCCESS,\n      payload: {\n        ...response.data,\n        currentPage: page,\n        limit\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_BUYER_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const fetchBuyerById = buyerId => async dispatch => {\n  dispatch({\n    type: FETCH_BUYER,\n    payload: buyerId\n  });\n  try {\n    const response = await axios.get(`${hostServer}buyer/${buyerId}/`);\n    dispatch({\n      type: FETCH_BUYER_BY_ID_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_BUYER_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const fetchAllBuyers = () => async dispatch => {\n  dispatch({\n    type: FETCH_BUYER\n  });\n  try {\n    const response = await axios.get(`${hostServer}buyer/withoutPag`);\n    dispatch({\n      type: FETCH_ALL_BUYERS_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_BUYER_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const createBuyer = buyerData => async dispatch => {\n  try {\n    dispatch({\n      type: FETCH_BUYER\n    });\n    const response = await fetch(`${hostServer}buyer/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(buyerData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      const errorMessage = errorData.message || 'Ошибка при создании покупателя';\n      throw new Error(errorMessage);\n    }\n    const data = await response.json();\n    dispatch({\n      type: CREATE_BUYER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_BUYER_FAILURE,\n      payload: error.message\n    });\n    console.error('Ошибка при создании покупателя:', error);\n  }\n};\nexport const updateBuyer = (buyerId, updatedBuyerData) => async dispatch => {\n  dispatch({\n    type: FETCH_BUYER\n  });\n  try {\n    const response = await axios.put(`${hostServer}/api/buyer/${buyerId}`, updatedBuyerData);\n    dispatch({\n      type: UPDATE_BUYER_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    let errorMessage = 'Ошибка при обновлении покупателя';\n    if (error.response) {\n      if (error.response.data && error.response.data.message) {\n        errorMessage = error.response.data.message;\n      } else if (error.response.status === 404) {\n        errorMessage = 'Покупатель не найден';\n      } else {\n        errorMessage = `Ошибка сервера (${error.response.status})`;\n      }\n    }\n    // else if (error.request) {\n    //   errorMessage = 'Запрос не был отправлен';\n    // } else {\n    //   errorMessage = error.message;\n    // }\n    dispatch({\n      type: FETCH_BUYER_FAILURE,\n      payload: errorMessage\n    });\n    console.error(\"Ошибка обновления покупателя:\", error);\n  }\n};","map":{"version":3,"names":["axios","FETCH_BUYER","FETCH_BUYER_SUCCESS","FETCH_BUYER_FAILURE","FETCH_BUYER_BY_ID_SUCCESS","FETCH_ALL_BUYERS_SUCCESS","CREATE_BUYER_SUCCESS","UPDATE_BUYER_SUCCESS","hostServerJSON","hostServer","path","fetchBuyer","page","limit","dispatch","type","response","get","payload","data","currentPage","error","message","fetchBuyerById","buyerId","fetchAllBuyers","createBuyer","buyerData","fetch","method","headers","body","JSON","stringify","ok","errorData","json","errorMessage","Error","console","updateBuyer","updatedBuyerData","put","status"],"sources":["D:/University/React/LAB_7/client/src/actions/Buyer/buyerAction.js"],"sourcesContent":["import axios from 'axios';\r\nimport {\r\n  FETCH_BUYER,\r\n  FETCH_BUYER_SUCCESS,\r\n  FETCH_BUYER_FAILURE,\r\n  FETCH_BUYER_BY_ID_SUCCESS,\r\n  FETCH_ALL_BUYERS_SUCCESS,\r\n  CREATE_BUYER_SUCCESS,\r\n  UPDATE_BUYER_SUCCESS\r\n} from '../../actionTypes';\r\nimport hostServerJSON from \"../hostServer.json\";\r\nconst hostServer = hostServerJSON.path;\r\n\r\nexport const fetchBuyer = (page = 1, limit = 10) => async (dispatch) => {\r\n  dispatch({ type: FETCH_BUYER });\r\n  try {\r\n    const response = await axios.get(`${hostServer}buyer/?page=${page}&limit=${limit}`);\r\n    dispatch({ type: FETCH_BUYER_SUCCESS, payload: { ...response.data, currentPage: page, limit } });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_BUYER_FAILURE, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const fetchBuyerById = (buyerId) => async (dispatch) => {\r\n  dispatch({ type: FETCH_BUYER, payload: buyerId });\r\n  try {\r\n    const response = await axios.get(`${hostServer}buyer/${buyerId}/`);\r\n    dispatch({ type: FETCH_BUYER_BY_ID_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_BUYER_FAILURE, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const fetchAllBuyers = () => async (dispatch) => {\r\n  dispatch({ type: FETCH_BUYER });\r\n  try {\r\n    const response = await axios.get(`${hostServer}buyer/withoutPag`);\r\n    dispatch({ type: FETCH_ALL_BUYERS_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_BUYER_FAILURE, payload: error.message });\r\n  }\r\n}\r\n\r\nexport const createBuyer = (buyerData) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: FETCH_BUYER }); \r\n\r\n    const response = await fetch(`${hostServer}buyer/`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(buyerData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      const errorMessage = errorData.message || 'Ошибка при создании покупателя';\r\n      throw new Error(errorMessage);\r\n    }\r\n\r\n    const data = await response.json();\r\n    dispatch({ type: CREATE_BUYER_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_BUYER_FAILURE, payload: error.message });\r\n    console.error('Ошибка при создании покупателя:', error);\r\n  }\r\n};\r\n\r\nexport const updateBuyer = (buyerId, updatedBuyerData) => async (dispatch) => {\r\n  dispatch({ type: FETCH_BUYER });\r\n\r\n  try {\r\n    const response = await axios.put(`${hostServer}/api/buyer/${buyerId}`, updatedBuyerData);\r\n    dispatch({ type: UPDATE_BUYER_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    let errorMessage = 'Ошибка при обновлении покупателя';\r\n    if (error.response) {\r\n      if (error.response.data && error.response.data.message) {\r\n        errorMessage = error.response.data.message;\r\n      } else if (error.response.status === 404) {\r\n        errorMessage = 'Покупатель не найден';\r\n      } else {\r\n        errorMessage = `Ошибка сервера (${error.response.status})`;\r\n      }\r\n    } \r\n    // else if (error.request) {\r\n    //   errorMessage = 'Запрос не был отправлен';\r\n    // } else {\r\n    //   errorMessage = error.message;\r\n    // }\r\n    dispatch({ type: FETCH_BUYER_FAILURE, payload: errorMessage });\r\n    console.error(\"Ошибка обновления покупателя:\", error);\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}