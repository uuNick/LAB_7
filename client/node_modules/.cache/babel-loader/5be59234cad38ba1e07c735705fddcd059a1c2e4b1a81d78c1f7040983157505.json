{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_SALE, FETCH_SALE_SUCCESS, FETCH_SALE_FAILURE } from '../../actionTypes';\nexport const fetchSale = (page = 1, limit = 10) => async dispatch => {\n  dispatch({\n    type: FETCH_SALE\n  });\n  try {\n    const response = await axios.get(`${hostServer}Sale/?page=${page}&limit=${limit}`);\n    dispatch({\n      type: FETCH_SALE_SUCCESS,\n      payload: {\n        ...response.data,\n        currentPage: page,\n        limit\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_SALE_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","FETCH_SALE","FETCH_SALE_SUCCESS","FETCH_SALE_FAILURE","fetchSale","page","limit","dispatch","type","response","get","hostServer","payload","data","currentPage","error","message"],"sources":["D:/University/React/LAB_7/client/src/actions/Sale/saleAction.js"],"sourcesContent":["import axios from 'axios';\r\nimport { FETCH_SALE, FETCH_SALE_SUCCESS, FETCH_SALE_FAILURE } from '../../actionTypes';\r\n\r\nexport const fetchSale = (page = 1, limit = 10) => async (dispatch) => {\r\n  dispatch({ type: FETCH_SALE });\r\n  try {\r\n    const response = await axios.get(`${hostServer}Sale/?page=${page}&limit=${limit}`);\r\n    dispatch({ type: FETCH_SALE_SUCCESS, payload: { ...response.data, currentPage: page, limit } });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_SALE_FAILURE, payload: error.message });\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,kBAAkB,EAAEC,kBAAkB,QAAQ,mBAAmB;AAEtF,OAAO,MAAMC,SAAS,GAAGA,CAACC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAAK,MAAOC,QAAQ,IAAK;EACrEA,QAAQ,CAAC;IAAEC,IAAI,EAAEP;EAAW,CAAC,CAAC;EAC9B,IAAI;IACF,MAAMQ,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,GAAGC,UAAU,cAAcN,IAAI,UAAUC,KAAK,EAAE,CAAC;IAClFC,QAAQ,CAAC;MAAEC,IAAI,EAAEN,kBAAkB;MAAEU,OAAO,EAAE;QAAE,GAAGH,QAAQ,CAACI,IAAI;QAAEC,WAAW,EAAET,IAAI;QAAEC;MAAM;IAAE,CAAC,CAAC;EACjG,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdR,QAAQ,CAAC;MAAEC,IAAI,EAAEL,kBAAkB;MAAES,OAAO,EAAEG,KAAK,CAACC;IAAQ,CAAC,CAAC;EAChE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}