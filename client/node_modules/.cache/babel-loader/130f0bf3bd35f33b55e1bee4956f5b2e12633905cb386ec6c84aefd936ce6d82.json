{"ast":null,"code":"import { FETCH_CONTRACT, FETCH_CONTRACT_SUCCESS, FETCH_CONTRACT_FAILURE, DELETE_CONTRACT_SUCCESS, SORT_CONTRACT_SUCCESS, FIND_CONTRACT_SUCCESS } from '../actionTypes';\nconst initialState = {\n  contract: [],\n  sortedContract: [],\n  findContract: [],\n  total: 0,\n  currentPage: 1,\n  totalPages: 0,\n  limit: 10,\n  loading: true,\n  error: null\n};\nconst contractSlice = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_CONTRACT:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_CONTRACT_SUCCESS:\n      return handlePagination(state, action.payload, 'contract');\n    case DELETE_CONTRACT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        contract: state.contract.filter(item => item.contract_number !== action.payload),\n        error: null\n      };\n    case SORT_CONTRACT_SUCCESS:\n      return handlePagination(state, action.payload, 'sortedContract');\n    case FIND_CONTRACT_SUCCESS:\n      return handlePagination(state, action.payload, 'findContract');\n    case FETCH_CONTRACT_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nconst handlePagination = (state, payload, dataKey) => ({\n  ...state,\n  [dataKey]: payload.data,\n  total: payload.total,\n  currentPage: payload.currentPage,\n  totalPages: payload.pages,\n  loading: false,\n  error: null\n});\nexport default contractSlice;","map":{"version":3,"names":["FETCH_CONTRACT","FETCH_CONTRACT_SUCCESS","FETCH_CONTRACT_FAILURE","DELETE_CONTRACT_SUCCESS","SORT_CONTRACT_SUCCESS","FIND_CONTRACT_SUCCESS","initialState","contract","sortedContract","findContract","total","currentPage","totalPages","limit","loading","error","contractSlice","state","action","type","handlePagination","payload","filter","item","contract_number","dataKey","data","pages"],"sources":["D:/University/React/LAB_7/client/src/slices/contractSlice.js"],"sourcesContent":["import {\r\n  FETCH_CONTRACT,\r\n  FETCH_CONTRACT_SUCCESS,\r\n  FETCH_CONTRACT_FAILURE,\r\n  DELETE_CONTRACT_SUCCESS,\r\n  SORT_CONTRACT_SUCCESS,\r\n  FIND_CONTRACT_SUCCESS\r\n} from '../actionTypes';\r\n\r\nconst initialState = {\r\n  contract: [],\r\n  sortedContract: [],\r\n  findContract: [],\r\n  total: 0,\r\n  currentPage: 1,\r\n  totalPages: 0,\r\n  limit: 10,\r\n  loading: true,\r\n  error: null,\r\n};\r\n\r\nconst contractSlice = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CONTRACT:\r\n      return { ...state, loading: true, error: null };\r\n    case FETCH_CONTRACT_SUCCESS:\r\n      return handlePagination(state, action.payload, 'contract');\r\n    case DELETE_CONTRACT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        contract: state.contract.filter(item => item.contract_number !== action.payload),\r\n        error: null,\r\n      }\r\n    case SORT_CONTRACT_SUCCESS:\r\n      return handlePagination(state, action.payload, 'sortedContract');\r\n    case FIND_CONTRACT_SUCCESS:\r\n      return handlePagination(state, action.payload, 'findContract');\r\n    case FETCH_CONTRACT_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst handlePagination = (state, payload, dataKey) => ({\r\n  ...state,\r\n  [dataKey]: payload.data,\r\n  total: payload.total,\r\n  currentPage: payload.currentPage,\r\n  totalPages: payload.pages,\r\n  loading: false,\r\n  error: null,\r\n});\r\n\r\nexport default contractSlice;"],"mappings":"AAAA,SACEA,cAAc,EACdC,sBAAsB,EACtBC,sBAAsB,EACtBC,uBAAuB,EACvBC,qBAAqB,EACrBC,qBAAqB,QAChB,gBAAgB;AAEvB,MAAMC,YAAY,GAAG;EACnBC,QAAQ,EAAE,EAAE;EACZC,cAAc,EAAE,EAAE;EAClBC,YAAY,EAAE,EAAE;EAChBC,KAAK,EAAE,CAAC;EACRC,WAAW,EAAE,CAAC;EACdC,UAAU,EAAE,CAAC;EACbC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,aAAa,GAAGA,CAACC,KAAK,GAAGX,YAAY,EAAEY,MAAM,KAAK;EACtD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKnB,cAAc;MACjB,OAAO;QAAE,GAAGiB,KAAK;QAAEH,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IACjD,KAAKd,sBAAsB;MACzB,OAAOmB,gBAAgB,CAACH,KAAK,EAAEC,MAAM,CAACG,OAAO,EAAE,UAAU,CAAC;IAC5D,KAAKlB,uBAAuB;MAC1B,OAAO;QACL,GAAGc,KAAK;QACRH,OAAO,EAAE,KAAK;QACdP,QAAQ,EAAEU,KAAK,CAACV,QAAQ,CAACe,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,eAAe,KAAKN,MAAM,CAACG,OAAO,CAAC;QAChFN,KAAK,EAAE;MACT,CAAC;IACH,KAAKX,qBAAqB;MACxB,OAAOgB,gBAAgB,CAACH,KAAK,EAAEC,MAAM,CAACG,OAAO,EAAE,gBAAgB,CAAC;IAClE,KAAKhB,qBAAqB;MACxB,OAAOe,gBAAgB,CAACH,KAAK,EAAEC,MAAM,CAACG,OAAO,EAAE,cAAc,CAAC;IAChE,KAAKnB,sBAAsB;MACzB,OAAO;QACL,GAAGe,KAAK;QACRH,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEG,MAAM,CAACG;MAChB,CAAC;IACH;MACE,OAAOJ,KAAK;EAChB;AACF,CAAC;AAED,MAAMG,gBAAgB,GAAGA,CAACH,KAAK,EAAEI,OAAO,EAAEI,OAAO,MAAM;EACrD,GAAGR,KAAK;EACR,CAACQ,OAAO,GAAGJ,OAAO,CAACK,IAAI;EACvBhB,KAAK,EAAEW,OAAO,CAACX,KAAK;EACpBC,WAAW,EAAEU,OAAO,CAACV,WAAW;EAChCC,UAAU,EAAES,OAAO,CAACM,KAAK;EACzBb,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,eAAeC,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}