{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_BUYER, FETCH_BUYER_SUCCESS, FETCH_BUYER_FAILURE, FETCH_BUYER_BY_ID, FETCH_BUYER_BY_ID_SUCCESS } from '../../actionTypes';\nexport const fetchBuyer = (page = 1, limit = 10) => async dispatch => {\n  dispatch({\n    type: FETCH_BUYER\n  });\n  try {\n    const response = await axios.get(`http://localhost:8000/api/Buyer/?page=${page}&limit=${limit}`);\n    dispatch({\n      type: FETCH_BUYER_SUCCESS,\n      payload: {\n        ...response.data,\n        currentPage: page,\n        limit\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_BUYER_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const fetchBuyerById = buyerId => async dispatch => {\n  dispatch({\n    type: FETCH_BUYER_BY_ID,\n    payload: buyerId\n  }); // Отправляем ID в payload\n  try {\n    const response = await axios.get(`http://localhost:8000/api/Buyer/${buyerId}/`); // API endpoint для получения по ID\n    dispatch({\n      type: FETCH_BUYER_BY_ID_SUCCESS,\n      payload: response.data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_BUYER_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","FETCH_BUYER","FETCH_BUYER_SUCCESS","FETCH_BUYER_FAILURE","FETCH_BUYER_BY_ID","FETCH_BUYER_BY_ID_SUCCESS","fetchBuyer","page","limit","dispatch","type","response","get","payload","data","currentPage","error","message","fetchBuyerById","buyerId"],"sources":["D:/University/React/LAB_7/client/src/actions/Buyer/buyerAction.js"],"sourcesContent":["import axios from 'axios';\r\nimport { FETCH_BUYER, FETCH_BUYER_SUCCESS, FETCH_BUYER_FAILURE, FETCH_BUYER_BY_ID, FETCH_BUYER_BY_ID_SUCCESS} from '../../actionTypes';\r\n\r\n\r\nexport const fetchBuyer = (page = 1, limit = 10) => async (dispatch) => {\r\n  dispatch({ type: FETCH_BUYER });\r\n  try {\r\n    const response = await axios.get(`http://localhost:8000/api/Buyer/?page=${page}&limit=${limit}`);\r\n    dispatch({ type: FETCH_BUYER_SUCCESS, payload: { ...response.data, currentPage: page, limit } });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_BUYER_FAILURE, payload: error.message });\r\n  }\r\n};\r\n\r\nexport const fetchBuyerById = (buyerId) => async (dispatch) => {\r\n  dispatch({ type: FETCH_BUYER_BY_ID, payload: buyerId }); // Отправляем ID в payload\r\n  try {\r\n    const response = await axios.get(`http://localhost:8000/api/Buyer/${buyerId}/`); // API endpoint для получения по ID\r\n    dispatch({ type: FETCH_BUYER_BY_ID_SUCCESS, payload: response.data });\r\n  } catch (error) {\r\n    dispatch({ type: FETCH_BUYER_FAILURE, payload: error.message });\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,iBAAiB,EAAEC,yBAAyB,QAAO,mBAAmB;AAGtI,OAAO,MAAMC,UAAU,GAAGA,CAACC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,KAAK,MAAOC,QAAQ,IAAK;EACtEA,QAAQ,CAAC;IAAEC,IAAI,EAAET;EAAY,CAAC,CAAC;EAC/B,IAAI;IACF,MAAMU,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,yCAAyCL,IAAI,UAAUC,KAAK,EAAE,CAAC;IAChGC,QAAQ,CAAC;MAAEC,IAAI,EAAER,mBAAmB;MAAEW,OAAO,EAAE;QAAE,GAAGF,QAAQ,CAACG,IAAI;QAAEC,WAAW,EAAER,IAAI;QAAEC;MAAM;IAAE,CAAC,CAAC;EAClG,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdP,QAAQ,CAAC;MAAEC,IAAI,EAAEP,mBAAmB;MAAEU,OAAO,EAAEG,KAAK,CAACC;IAAQ,CAAC,CAAC;EACjE;AACF,CAAC;AAED,OAAO,MAAMC,cAAc,GAAIC,OAAO,IAAK,MAAOV,QAAQ,IAAK;EAC7DA,QAAQ,CAAC;IAAEC,IAAI,EAAEN,iBAAiB;IAAES,OAAO,EAAEM;EAAQ,CAAC,CAAC,CAAC,CAAC;EACzD,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,mCAAmCO,OAAO,GAAG,CAAC,CAAC,CAAC;IACjFV,QAAQ,CAAC;MAAEC,IAAI,EAAEL,yBAAyB;MAAEQ,OAAO,EAAEF,QAAQ,CAACG;IAAK,CAAC,CAAC;EACvE,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdP,QAAQ,CAAC;MAAEC,IAAI,EAAEP,mBAAmB;MAAEU,OAAO,EAAEG,KAAK,CAACC;IAAQ,CAAC,CAAC;EACjE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}